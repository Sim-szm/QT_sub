#############################################################################
# Makefile for building: mainform
# Generated by qmake (2.01a) (Qt 4.8.3) on: ?? 5? 27 19:48:06 2014
# Project:  mainform.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile mainform.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtSql -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainform.cpp \
		database.cpp \
		myitem.cpp \
		input.cpp \
		topscore.cpp \
		gamearea.cpp moc_mainform.cpp \
		moc_input.cpp \
		moc_topscore.cpp \
		moc_gamearea.cpp
OBJECTS       = main.o \
		mainform.o \
		database.o \
		myitem.o \
		input.o \
		topscore.o \
		gamearea.o \
		moc_mainform.o \
		moc_input.o \
		moc_topscore.o \
		moc_gamearea.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		mainform.pro
QMAKE_TARGET  = mainform
DESTDIR       = 
TARGET        = mainform

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainform.h ui_input.h ui_topscore.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: mainform.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtSql.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile mainform.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtSql.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile mainform.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/mainform1.0.0 || $(MKDIR) .tmp/mainform1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/mainform1.0.0/ && $(COPY_FILE) --parents mainform.h database.h myitem.h input.h topscore.h gamearea.h .tmp/mainform1.0.0/ && $(COPY_FILE) --parents main.cpp mainform.cpp database.cpp myitem.cpp input.cpp topscore.cpp gamearea.cpp .tmp/mainform1.0.0/ && $(COPY_FILE) --parents mainform.ui input.ui topscore.ui .tmp/mainform1.0.0/ && (cd `dirname .tmp/mainform1.0.0` && $(TAR) mainform1.0.0.tar mainform1.0.0 && $(COMPRESS) mainform1.0.0.tar) && $(MOVE) `dirname .tmp/mainform1.0.0`/mainform1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/mainform1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainform.cpp moc_input.cpp moc_topscore.cpp moc_gamearea.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainform.cpp moc_input.cpp moc_topscore.cpp moc_gamearea.cpp
moc_mainform.cpp: gamearea.h \
		myitem.h \
		mainform.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainform.h -o moc_mainform.cpp

moc_input.cpp: input.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) input.h -o moc_input.cpp

moc_topscore.cpp: topscore.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) topscore.h -o moc_topscore.cpp

moc_gamearea.cpp: myitem.h \
		gamearea.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gamearea.h -o moc_gamearea.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainform.h ui_input.h ui_topscore.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainform.h ui_input.h ui_topscore.h
ui_mainform.h: mainform.ui
	/usr/bin/uic-qt4 mainform.ui -o ui_mainform.h

ui_input.h: input.ui
	/usr/bin/uic-qt4 input.ui -o ui_input.h

ui_topscore.h: topscore.ui
	/usr/bin/uic-qt4 topscore.ui -o ui_topscore.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainform.h \
		gamearea.h \
		myitem.h \
		topscore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainform.o: mainform.cpp mainform.h \
		gamearea.h \
		myitem.h \
		ui_mainform.h \
		topscore.h \
		input.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainform.o mainform.cpp

database.o: database.cpp database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o database.o database.cpp

myitem.o: myitem.cpp myitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myitem.o myitem.cpp

input.o: input.cpp input.h \
		ui_input.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o input.o input.cpp

topscore.o: topscore.cpp topscore.h \
		ui_topscore.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o topscore.o topscore.cpp

gamearea.o: gamearea.cpp gamearea.h \
		myitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamearea.o gamearea.cpp

moc_mainform.o: moc_mainform.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainform.o moc_mainform.cpp

moc_input.o: moc_input.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_input.o moc_input.cpp

moc_topscore.o: moc_topscore.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_topscore.o moc_topscore.cpp

moc_gamearea.o: moc_gamearea.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamearea.o moc_gamearea.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

